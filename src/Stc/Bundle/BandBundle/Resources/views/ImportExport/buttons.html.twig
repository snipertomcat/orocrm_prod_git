<div class="btn-group">
    {% if resource_granted('oro_importexport_import') %}
    <a type="button"
        class="btn import-btn icons-holder-text no-hash"
        href="{{ path('oro_importexport_import_form', {'entity': entityClass}) }}">
        <i class="icon-signin hide-text">{{ 'oro.importexport.import.label'|trans }}</i>{{ 'oro.importexport.import.label'|trans }}
    </a>
    {% endif %}

    {% if resource_granted('oro_importexport_export') %}
    <a type="button"
       class="btn export-btn icons-holder-text no-hash"
       href="{{ path('oro_importexport_export_instant', {'processorAlias': exportProcessor}) }}">
        <i class="icon-signout hide-text">{{ 'oro.importexport.export.label'|trans }}</i>{{ 'oro.importexport.export.label'|trans }}
    </a>
    {% endif %}
</div>

<script type="text/javascript">
    require(['jquery', 'orotranslation/js/translator', 'oro/dialog-widget', 'oroui/js/mediator', 'oroimportexport/js/export-handler'],
    function($, __, DialogWidget, mediator, exportHandler) {
        $('.import-btn').on('click', function(e) {
            e.preventDefault();

            var widget = new DialogWidget({
                'url': this.href,
                'title': {{ imortTitle|default('oro.importexport.import.label'|trans)|json_encode|raw }},
                'stateEnabled': false,
                'incrementalPosition': false,
                'dialogOptions': {
                    'width': 650,
                    'autoResize': true,
                    'modal': true,
                    'minHeight': 100
                }
            });
            widget.render();

            {% if dataGridName is defined %}
            var datagridName = {{ dataGridName|json_encode|raw }};
            widget.on('importComplete', function (data) {
                if (data.success) {
                    mediator.trigger('datagrid:doReset:' + datagridName);
                }
            });
            {% endif %}
        });

        $('.export-btn').on('click', function(e) {
            e.preventDefault();

            var exportStartedMessage = exportHandler.startExportNotificationMessage();
            $.getJSON(this.href, function(data) {
                exportStartedMessage.close();
                exportHandler.handleExportResponse(data);
            });
        });
    });
</script>
